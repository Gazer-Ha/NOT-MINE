local Hatless = {}

do
    local ShowMessage = function(t, txt, dur)
        pcall(function()
            game.StarterGui:SetCore("SendNotification", {
                Title = t,
                Text = txt,
                Icon = "",
                Duration = dur
            })
        end)
    end

    local DisableCharacterCollisions = true
    local InstantRespawn = true
    local ParentCharacterToRig = true
    local RigTransparency = 1

    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

    local Rig = Players:CreateHumanoidModelFromDescription(Players:GetHumanoidDescriptionFromUserId(LocalPlayer.UserId), Enum.HumanoidRigType.R6)
    Rig.Name = LocalPlayer.Name
    Rig.Parent = workspace
    Hatless.Rig = Rig

    local RigHumanoid = Rig:FindFirstChildOfClass("Humanoid")
    RigHumanoid.DisplayName = LocalPlayer.DisplayName
    local RigRootPart = RigHumanoid.RootPart

    for _, part in Rig:GetDescendants() do
        if part:IsA("BasePart") then
            part.Transparency = RigTransparency
        end
    end

    local Animate = Character:WaitForChild("Animate", 5)
    local AnimateClone
    if Animate then
        AnimateClone = Animate:Clone()
        Animate.Disabled = true
    end

    if rawget(getgenv(), "replicatesignal") and InstantRespawn then
        ShowMessage("Wait!", "please wait for at least " .. Players.RespawnTime - 0.1 .. " second.", 10)
        replicatesignal(LocalPlayer.ConnectDiedSignalBackend)
        task.wait(Players.RespawnTime - 0.1)
        replicatesignal(Character:FindFirstChildOfClass("Humanoid").ServerBreakJoints)
    end

    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local RootPart = Character:WaitForChild("HumanoidRootPart")
    RigRootPart.CFrame = RootPart.CFrame

    if ParentCharacterToRig then
        Character.Parent = Rig
    end

    local Motor6Ds = {}
    for _, m in Character:GetDescendants() do
        if m:IsA("Motor6D") and Rig:FindFirstChild(m.Part0.Name) and Rig:FindFirstChild(m.Part1.Name) then
            Motor6Ds[m] = {
                Part0 = Rig[m.Part0.Name],
                Part1 = Rig[m.Part1.Name]
            }
        end
    end

    local RunService = game:GetService("RunService")
    RunService.PostSimulation:Connect(function()
        for motor, data in pairs(Motor6Ds) do
            local p0 = data.Part0
            local p1 = data.Part1
            if p0 and p1 then
                local delta = p0.CFrame:ToObjectSpace(p1.CFrame)
                local axis, angle = delta:ToAxisAngle()
                sethiddenproperty(motor, "ReplicateCurrentAngle6D", axis * angle)
                sethiddenproperty(motor, "ReplicateCurrentOffset6D", delta.Position)
            end
        end
        RootPart.AssemblyAngularVelocity = Vector3.zero
        RootPart.AssemblyLinearVelocity = Vector3.zero
        RootPart.CFrame = RigRootPart.CFrame + Vector3.new(0, math.sin(os.clock() * 15) * 0.004, 0)
    end)

    RunService.PreSimulation:Connect(function()
        for _, part in Rig:GetDescendants() do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        if DisableCharacterCollisions and not ParentCharacterToRig then
            for _, part in Character:GetDescendants() do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)

    task.defer(function()
        local CurrentCamera = workspace.CurrentCamera
        local CameraCFrame = CurrentCamera.CFrame
        LocalPlayer.Character = Rig
        CurrentCamera.CameraSubject = RigHumanoid
        RunService.PreRender:Wait()
        workspace.CurrentCamera.CFrame = CameraCFrame
    end)

    RigHumanoid.Died:Connect(function()
        if AnimateClone then
            AnimateClone.Parent = Character
            AnimateClone.Disabled = false
        end
        replicatesignal(Character:FindFirstChildOfClass("Humanoid").ServerBreakJoints)
        Rig:Destroy()
    end)
end

return Hatless
