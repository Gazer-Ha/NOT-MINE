if not syn and not fluxus then return warn("Executor not supported") end

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local MarketplaceService = game:GetService("MarketplaceService")
local PlaceId = game.PlaceId
local fileName = "RobloxAssets.txt"
local scriptFile = "RobloxAssetFinder.lua"

-- Save the current script if not already saved
if not isfile(scriptFile) then
    writefile(scriptFile, [[
        ]] .. game:HttpGet("https://pastebin.com/raw/M6rVmWxR") .. [[ -- Placeholder if you're copying manually
    ]])
end

local checked = 0
local maxBeforeRejoin = 100
local matches = {}
local lastCheckedId = 1

-- Restore previous progress
pcall(function()
	if isfile(fileName) then
		for id in readfile(fileName):gmatch("%d+") do
			matches[tonumber(id)] = true
		end
	end
	if isfile("lastId.txt") then
		lastCheckedId = tonumber(readfile("lastId.txt")) or 1
	end
end)

-- Save data
local function save()
	local list = {}
	for id in pairs(matches) do
		table.insert(list, tostring(id))
	end
	writefile(fileName, table.concat(list, "\n"))
	writefile("lastId.txt", tostring(lastCheckedId))
end

-- Loop search
spawn(function()
	while true do
		local id = lastCheckedId
		local success, info = pcall(function()
			return MarketplaceService:GetProductInfo(id)
		end)

		if success and info and info.Creator and info.Creator.Name == "Roblox" then
			print("Found Roblox Asset:", id)
			matches[id] = true
			save()
		end

		lastCheckedId += 1
		checked += 1

		if checked % maxBeforeRejoin == 0 then
			save()
			queueonteleport('loadstring(readfile("' .. scriptFile .. '"))()')
			task.wait(1)
			Players.LocalPlayer:Kick("Rejoining to avoid rate limit...")
			TeleportService:Teleport(PlaceId)
			break
		end

		task.wait(0.2)
	end
end)
