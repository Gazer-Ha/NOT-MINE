if not syn and not fluxus then return warn("Executor not supported") end

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local MarketplaceService = game:GetService("MarketplaceService")
local PlaceId = game.PlaceId

local fileName = "RobloxAssets.txt"
local idFile = "lastId.txt"
local checked = 0
local maxBeforeRejoin = 100
local matches = {}
local startId = 1

-- Restore progress
pcall(function()
	if isfile(fileName) then
		for id in readfile(fileName):gmatch("%d+") do
			matches[tonumber(id)] = true
		end
	end
	if isfile(idFile) then
		startId = tonumber(readfile(idFile)) or 1
	end
end)

-- Save matching IDs and current progress
local function save()
	local lines = {}
	for id in pairs(matches) do
		table.insert(lines, tostring(id))
	end
	writefile(fileName, table.concat(lines, "\n"))
	writefile(idFile, tostring(startId))
end

-- Search loop
while true do
	local id = startId
	local success, info = pcall(function()
		return MarketplaceService:GetProductInfo(id)
	end)

	if success and info and info.Creator and info.Creator.Name == "Roblox" then
		print("Roblox made:", id)
		matches[id] = true
		save()
	end

	startId += 1
	checked += 1

	if checked % maxBeforeRejoin == 0 then
		save()
		queueonteleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/Gazer-Ha/NOT-MINE/refs/heads/main/Ass"))()')
		task.wait(1)
		Players.LocalPlayer:Kick("Rejoining...")
		TeleportService:Teleport(PlaceId)
		break
	end

	task.wait(0.2)
end
