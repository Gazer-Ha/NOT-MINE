local Hatless = {}

-- Settings
local Transparency = 0.75
local AntiSleepAmplitude = Vector3.new(0.0025, 0.005, 0.0025)

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- Player Setup
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
Character.Archivable = true

-- Clone Fake Character
local FakeCharacter = Character:Clone()
Hatless.FakeCharacter = FakeCharacter

-- Disable Animate on new character
local AnimateBlocker
AnimateBlocker = Workspace.DescendantAdded:Connect(function(desc)
	if desc:IsA("LocalScript") and desc.Name == "Animate" and desc.Parent == Player.Character then
		desc.Enabled = false
		AnimateBlocker:Disconnect()
	end
end)

-- Break original character
Character:BreakJoints()

-- Respawn & Transfer
Player.Character = nil
repeat task.wait() until Player.Character
task.wait(0.1)
local RealChar = Player.Character
RealChar.Archivable = true
FakeCharacter.Name = Player.Name .. "_Fake"
FakeCharacter.Parent = Workspace
RealChar:WaitForChild("Humanoid"):ChangeState(16)
workspace.FallenPartsDestroyHeight = 0/0

-- Disable LocalScripts
task.spawn(function()
	for _, child in ipairs(FakeCharacter:GetChildren()) do
		if child:IsA("LocalScript") then
			child.Enabled = false
			task.wait(0.1)
		end
	end
end)

-- Transparency
for _, part in ipairs(FakeCharacter:GetDescendants()) do
	if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
		part.Transparency = Transparency
	elseif part:IsA("Decal") then
		part.Transparency = Transparency
	end
end

-- Setup Camera & Swap
workspace.CurrentCamera.CameraSubject = FakeCharacter:WaitForChild("Humanoid")
Player.Character = FakeCharacter
RealChar.Parent = FakeCharacter

-- Setup Motor6D syncing
local Motor6Ds = {}
for _, desc in ipairs(RealChar:GetDescendants()) do
	if desc:IsA("Motor6D") and desc.Part0 and desc.Part1 then
		local fakePart0 = FakeCharacter:FindFirstChild(desc.Part0.Name)
		local fakePart1 = FakeCharacter:FindFirstChild(desc.Part1.Name)
		if fakePart0 and fakePart1 then
			Motor6Ds[desc] = { Part0 = fakePart0, Part1 = fakePart1 }
		end
	end
end

-- Update Motor6Ds
RunService.PostSimulation:Connect(function()
	for motor, pair in next, Motor6Ds do
		local Part0, Part1 = pair.Part0, pair.Part1
		if Part0 and Part1 then
			local delta = Part0.CFrame:ToObjectSpace(Part1.CFrame)
			local axis, angle = delta:ToAxisAngle()
			sethiddenproperty(motor, "ReplicateCurrentAngle6D", axis * angle)
			sethiddenproperty(motor, "ReplicateCurrentOffset6D", delta.Position)
		end
	end

	-- Antisleep movement
	local root = RealChar:FindFirstChild("HumanoidRootPart")
	local fakeTorso = FakeCharacter:FindFirstChild("Torso")
	if root and fakeTorso then
		local offset = math.sin(os.clock() * 100) * AntiSleepAmplitude
		root.CFrame = fakeTorso.CFrame + offset
	end
end)

-- Disable collisions
RunService.PreSimulation:Connect(function()
	for _, part in ipairs(RealChar:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = false
			part.AssemblyLinearVelocity = Vector3.zero
		end
	end
end)

return Hatless
